name: Terraform CI

on: 
  push:
    branches: main
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'

jobs: 
  lint: 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
    
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
      
      - name: Terraform FMT
        run: terraform fmt -check -diff
      
      - name: Run Terraform Lint
        uses: terraform-linters/setup-tflint@v1

  security_check:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          soft_fail: true 
      
  terraform_ansible: 
    runs-on: ubuntu-latest
    needs: [lint, security_check]
    
    env: 
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    steps: 
      - name: Checkout
        uses: actions/checkout@v4
    
      #### TERRAFORM ####
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init -backend-config="resource_group_name=${{ secrets.AZURE_RESOURCE_GROUP_NAME }}" -backend-config="storage_account_name=${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}" -backend-config="container_name=${{ secrets.AZURE_CONTAINER_NAME }}" -backend-config="key=${{ secrets.AZURE_STATE_FILE_KEY }}"

      - name: Terraform PLAN
        run: terraform plan

      - name: Terraform APPLY
        if: github.ref == 'refs/heads/main'
        id: tf_apply
        run: terraform apply -auto-approve 

      #### ANSIBLE ####  
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
  
      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible
  
      - name: Run Ansible Playbook
        if: steps.tf_apply.outcome == 'success'
        env:
          ANSIBLE_HOST_KEY_CHECKING: 'false'
        run: |
          cd ansible
          ansible-playbook -i inventory.ini playbook.yaml